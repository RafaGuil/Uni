package fp.buses.tipos;

import java.time.Duration;
import java.util.Comparator;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class AgenciaBus {
	private String nombre;
	private List<Viaje> viajes;
	
	public AgenciaBus(String nombre, Stream<Viaje> viaje) {
		this.nombre = nombre;
		this.viajes = viaje.collect(Collectors.toList());
	}

	@Override
	public String toString() {
		return "AgenciaBus [nombre=" + nombre + ", viajes=" + viajes + "]";
	}

	@Override
	public int hashCode() {
		return Objects.hash(nombre, viajes);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		AgenciaBus other = (AgenciaBus) obj;
		return Objects.equals(nombre, other.nombre) && Objects.equals(viajes, other.viajes);
	}
	
	public Duration getMaximaDuracion() {
		return viajes.stream()
				.max(Comparator.comparing(Viaje::getNParadas))
				.map(Viaje::getDuracion)
				.orElse(null);
	}
	
}
